define main

type Si = stream[integer]

function OddIntegers(Limit: integer returns Si)
	for initial
		i := 3
	while i <= Limit
	repeat
		i := old i + 2
	returns stream of i when (i <= Limit)
	end for
end function

function Filter(S: Si, M: integer returns Si)
	for I in S
		Multiple: boolean := mod(I,M) = 0
	returns stream of I unless Multiple
	end for
end function

function Sqrt(X, Eps: real returns real)
	for initial
		Root := X/2.0
	while abs(X - (Root*Root)) >= Eps
	repeat
		Root := (X /old Root + old Root) / 2.0
	returns value of Root
	end for
end function

function main(returns Si)
	OddIntegers(10)

end function
